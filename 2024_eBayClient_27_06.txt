1. if we have t1 and t2 threads which are writing data in ArrayList.. what will happen -> ConcurrentModificationException
2. nd solution for this -> CopyOnWriteArrayList
2. write a api call for below use case->

This is GET call
http://localhost:9192/synopsis

It should return data by call below api
https://api.sampleapis.com/avatar/info

api has below details->
[{"synopsis":"The world is divided into four nations -- the Water Tribe, the Earth Kingdom, the Fire Nation and and the Air Nomads -- each represented by a natural element for which the nation is named. Benders have the ability to control and manipulate the element from their nation. Only the Avatar is the master of all four elements. The ruthless Fire Nation wants to conquer the world but the only bender who has enough power, the Avatar, has disappeared ... until now. His tribe soon discovers that Aang is the long-lost Avatar. Now Katara and Sokka must safeguard Aang on his journey to master all four elements and save the world from the Fire Nation.","yearsAired":"2003 - 2008","genres":["Animation","Action","Adventure","Family","Fantasy","Mystery"],"creators":[{"name":"Michael Dante DiMartino","url":"https://www.imdb.com/name/nm0227204/"},{"name":"Bryan Konietzko","url":"https://www.imdb.com/name/nm1665983/"}],"id":1}]

end result should be it returns only synopsis data like
The world is divided into four nations -- the Water Tribe, the Earth Kingdom,-----

Solution->
@GetMapping("/synopsis")
	public String getSynopsis() throws ParseException{
		
		String url="https://api.sampleapis.com/avatar/info";
		RestTemplate rest=new RestTemplate();
		
		String str=(String) rest.getForObject(url, String.class);
		System.out.println(str);
		String res="";
		try {
            JSONArray jsonArray = new JSONArray(str);
            System.out.println(jsonArray.toString(4)); // This will print the formatted JSONArray with an indent of 4 spaces
            
            for(int i=0;i<jsonArray.length();i++) {
            	JSONObject ob=jsonArray.getJSONObject(i);
            	
            	if(ob.get("synopsis")!=null) {
            		res=(String) ob.get("synopsis");
            	}
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
        
		return res;
	}
